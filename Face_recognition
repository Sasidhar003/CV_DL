
import face_recognition
import numpy as np
import cv2
import csv
import os
from datetime import datetime


#taking input from the web cam
video_capture = cv2.VideoCapture(0)

# Load the image file
allu_image = face_recognition.load_image_file("Alluarjun.jpg")

# Obtain the facial encodings for the detected face(s) in the image
allu_encoding = face_recognition.face_encodings(allu_image)[0]

mahesh_image = face_recognition.load_image_file("Mahesh.jpg")
mahesh_encoding = face_recognition.face_encodings(mahesh_image)[0]

prabhas_image = face_recognition.load_image_file("prabhas.jpg")
prabhas_encoding = face_recognition.face_encodings(prabhas_image)[0]

known_face_encoding = [allu_encoding, mahesh_encoding, prabhas_encoding]
known_face_names = ["Allu Arjun", "Mahesh", "Prabhas"]

students = known_face_names.copy()

face_locations = []
face_names = []
face_encodings = []
s=True

now = datetime.now()
current_date = now.strftime("%Y - %m - %d")

f = open(current_date+'.csv','w+',newline = '')
lnwriter = csv.writer(f)

while True:
  _,frame = video_capture.read()
  small_frame = cv2.resize(frame,(0,0),fx=0.25, fy=0.25)
  rgb_small_frame = cv2.cvtColor(small_frame, cv2.COLOR_BGR2RGB)
  #rgb_small_frame = np.ascontiguousarray(small_frame[:, :, ::-1])

  if s:
    face_locations = face_recognition.face_locations(rgb_small_frame)
    face_encodings = face_recognition.face_encodings(rgb_small_frame, face_locations)
    face_names = []
    for face_encoding in face_encodings:
      matches = face_recognition.compare_faces(known_face_encoding, face_encoding)
      name=""
      face_distance = face_recognition.face_distance(known_face_encoding, face_encoding)
      best_match_index = np.argmin(face_distance)
      if matches[best_match_index]:
        name = known_face_names[best_match_index]

      face_names.append(name)
      if name in known_face_names:
        if name in students:
          students.remove(name)
          print(students)
          current_time = now.strftime("%H-%M-%S")
          lnwriter.writerow([name, current_time])

  cv2.imshow("attendance system", frame)
  if cv2.waitKey(1) & 0xFF == ord('q'):
    break

video_capture.release()
cv2.destroyAllWindows()
f.close()            
